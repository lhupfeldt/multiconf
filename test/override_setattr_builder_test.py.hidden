# Copyright (c) 2012 Lars Hupfeldt Nielsen, Hupfeldt IT
# All rights reserved. This work is under a BSD license, see LICENSE.TXT.


from multiconf import mc_config, ConfigBuilder, caller_file_line
from ..envs import EnvFactory

from .utils.tstclasses import ItemWithAA


ef = EnvFactory()
pp = ef.Env('pp')
prod = ef.Env('prod')


class MeSetterBuilder(ConfigBuilder):
    def build(self):
        pass

    def setme(self, name, **mevalues):
        file_name, line_num = caller_file_line()
        super(MeSetterBuilder, self).setattr(name, mc_caller_file_name=file_name, mc_caller_line_num=line_num, **mevalues)

    def overrideme(self, name, val):
        file_name, line_num = caller_file_line()
        super(MeSetterBuilder, self).override(name, val, mc_caller_file_name=file_name, mc_caller_line_num=line_num)


def test_override_setattr():
    @mc_config
    def _(root):
        with MeSetterBuilder() as cb:
            cb.setme('aa', prod="hi3", pp="hello")

    assert cb.aa == "hi3"
