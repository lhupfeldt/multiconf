# Copyright (c) 2012 Lars Hupfeldt Nielsen, Hupfeldt IT
# All rights reserved. This work is under a BSD license, see LICENSE.TXT.

from __future__ import print_function

from multiconf import mc_config, ConfigItem, ConfigBuilder
from ..envs import EnvFactory

from .utils.tstclasses import ItemWithAA, ItemWithAABB


ef2_pp_prod = EnvFactory()
pp2 = ef2_pp_prod.Env('pp')
prod2 = ef2_pp_prod.Env('prod')
ef2_pp_prod.EnvGroup('g_prod_like', prod2, pp2)


def test_builder_ref_env_attr_and_override():
    class X(ConfigItem):
        def __init__(self, aa=1):
            super(X, self).__init__()
            self.aa = aa

        def mc_init(self):
            self.override('aa', self.aa + 1)

    class XBuilder(ConfigBuilder):
        def __init__(self, aa=17):
            super(XBuilder, self).__init__()
            self.aa = aa

        def mc_init(self):
            self.override('aa', self.aa - 1)

        def build(self):
            # Everything in builder will be set on parent!
            # Maybe override should be forbidden here
            self.override('aa', self.aa + 3)
            X()

    with ConfigItem(prod2, ef2_pp_prod) as cr:
        XBuilder()
    assert cr.aa == 19
    assert cr.X.aa == 16

    with ConfigItem(pp2, ef2_pp_prod) as cr:
        with XBuilder(aa=2) as x:
            x.aa = 3
    assert cr.aa == 5
    assert cr.X.aa == 2

    with ConfigItem(pp2, ef2_pp_prod) as cr:
        with XBuilder(aa=2) as x:
            x.setattr('aa', default=3, pp=5)
    assert cr.aa == 7
    assert cr.X.aa == 4
